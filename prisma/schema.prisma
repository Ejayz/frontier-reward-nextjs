generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model actions {
  id                          Int                           @id @default(autoincrement())
  name                        String?                       @db.VarChar(250)
  description                 String?                       @db.VarChar(250)
  employee_id                 Int?
  created_at                  DateTime?                     @default(now()) @db.Timestamp(0)
  updated_at                  DateTime?                     @db.Timestamp(0)
  removed_at                  DateTime?                     @db.Timestamp(0)
  is_exist                    Int?
  employee_info               employee_info?                @relation(fields: [employee_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "actions_ibfk_1")
  campaign_action_reward_list campaign_action_reward_list[]

  @@index([employee_id], map: "employee_id")
}

model campaign {
  id                          Int                           @id @default(autoincrement())
  name                        String?
  description                 String?                       @db.VarChar(256)
  start_date                  DateTime?                     @db.Date
  end_date                    DateTime?                     @db.Date
  status                      String?                       @db.VarChar(50)
  package_id                  Int?
  employee_id                 Int?
  created_at                  DateTime?                     @default(now()) @db.Timestamp(0)
  updated_at                  DateTime?                     @db.Timestamp(0)
  removed_at                  DateTime?                     @db.Timestamp(0)
  is_exist                    Int?                          @default(1) @db.TinyInt
  employee_info               employee_info?                @relation(fields: [employee_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "campaign_ibfk_1")
  Renamedpackage              packages?                     @relation(fields: [package_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "campaign_ibfk_2")
  campaign_action_reward_list campaign_action_reward_list[]
  campaign_transaction        campaign_transaction[]

  @@index([employee_id], map: "employee_id")
  @@index([package_id], map: "package_id")
}

model campaign_action_reward_list {
  id            Int            @id @default(autoincrement())
  quantity      Float?         @db.Float
  status        String?        @db.VarChar(50)
  action_id     Int?
  reward_id     Int?
  employee_id   Int?
  campaign_id   Int?
  created_at    DateTime?      @default(now()) @db.Timestamp(0)
  updated_at    DateTime?      @db.Timestamp(0)
  removed_at    DateTime?      @db.Timestamp(0)
  is_exist      Int?           @default(1) @db.TinyInt
  actions       actions?       @relation(fields: [action_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "carl_ibfk_1")
  reward        reward?        @relation(fields: [reward_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "carl_ibfk_2")
  employee_info employee_info? @relation(fields: [employee_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "carl_ibfk_3")
  campaign      campaign?      @relation(fields: [campaign_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "carl_ibfk_4")

  @@index([action_id], map: "action_id")
  @@index([campaign_id], map: "campaign_id")
  @@index([employee_id], map: "employee_id")
  @@index([reward_id], map: "reward_id")
}

model campaign_reward_transaction {
  id                      Int                   @id @default(autoincrement())
  type                    String?               @db.VarChar(50)
  status                  String?               @db.VarChar(50)
  quantity                Float?                @db.Float
  reward_id               Int?
  campaign_transaction_id Int?
  created_at              DateTime?             @default(now()) @db.Timestamp(0)
  updated_at              DateTime?             @db.Timestamp(0)
  removed_at              DateTime?             @db.Timestamp(0)
  is_exist                Int?                  @default(1) @db.TinyInt
  reward                  reward?               @relation(fields: [reward_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "crt_ibfk_1")
  campaign_transaction    campaign_transaction? @relation(fields: [campaign_transaction_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "crt_ibfk_2")

  @@index([campaign_transaction_id], map: "campaign_transaction_id")
  @@index([reward_id], map: "reward_id")
}

model campaign_transaction {
  id                          Int                           @id @default(autoincrement())
  type                        String?                       @db.VarChar(50)
  status                      String?                       @db.VarChar(50)
  campaign_id                 Int?
  employee_id                 Int?
  customer_id                 Int?
  created_at                  DateTime?                     @default(now()) @db.Timestamp(0)
  updated_At                  DateTime?                     @db.Timestamp(0)
  removed_at                  DateTime?                     @db.Timestamp(0)
  is_exist                    Int?                          @default(1) @db.TinyInt
  campaign_reward_transaction campaign_reward_transaction[]
  customer_info               customer_info?                @relation(fields: [customer_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "campaign_transaction_ibfk_1")
  employee_info               employee_info?                @relation(fields: [employee_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "campaign_transaction_ibfk_2")
  campaign                    campaign?                     @relation(fields: [campaign_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "campaign_transaction_ibfk_3")

  @@index([campaign_id], map: "campaign_id")
  @@index([customer_id], map: "customer_id")
  @@index([employee_id], map: "employee_id")
}

model customer_address {
  id             Int             @id @default(autoincrement())
  address_1      String          @db.Text
  address_2      String?         @db.Text
  country        String          @db.Text
  city           String          @db.Text
  zip_code       String          @db.Text
  state_province String          @db.Text
  created_at     DateTime?       @default(now()) @db.Timestamp(0)
  updated_at     DateTime?       @db.Timestamp(0)
  removed_at     DateTime?       @db.Timestamp(0)
  is_exist       Int?            @default(1) @db.TinyInt
  customer_info  customer_info[]
}

model customer_info {
  id                       Int                    @id @default(autoincrement())
  first_name               String                 @db.VarChar(50)
  middle_name              String?                @db.VarChar(50)
  last_name                String                 @db.VarChar(50)
  suffix                   String?                @db.VarChar(50)
  points                   Float                  @db.Float
  user_id                  Int
  address_id               Int
  customer_vehicle_info_id Int
  package_id               Int
  employee_id              Int
  created_at               DateTime?              @default(now()) @db.Timestamp(0)
  updated_at               DateTime?              @db.Timestamp(0)
  removed_at               DateTime?              @db.Timestamp(0)
  is_exist                 Int?                   @db.TinyInt
  campaign_transaction     campaign_transaction[]
  users                    users                  @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "customer_info_ibfk_1")
  customer_address         customer_address       @relation(fields: [address_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "customer_info_ibfk_2")
  customer_vehicle_info    customer_vehicle_info  @relation(fields: [customer_vehicle_info_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "customer_info_ibfk_3")
  Renamedpackage           packages               @relation(fields: [package_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "customer_info_ibfk_4")
  employee_info            employee_info          @relation(fields: [employee_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "customer_info_ibfk_5")
  redeem_transaction       redeem_transaction[]

  @@index([address_id], map: "address_id")
  @@index([customer_vehicle_info_id], map: "customer_vehicle_info_id")
  @@index([employee_id], map: "employee_id")
  @@index([package_id], map: "package_id")
  @@index([user_id], map: "user_id")
}

model customer_vehicle_info {
  id            Int             @id @default(autoincrement())
  vin_id        String          @db.Text
  year          String          @db.VarChar(10)
  trim          String          @db.VarChar(96)
  color         String          @db.VarChar(50)
  created_at    DateTime?       @default(now()) @db.Timestamp(0)
  updated_at    DateTime?       @db.Timestamp(0)
  removed_at    DateTime?       @db.Timestamp(0)
  is_exist      Int?            @default(1) @db.TinyInt
  customer_info customer_info[]
}

model employee_info {
  id                          Int                           @id @default(autoincrement())
  first_name                  String                        @db.VarChar(50)
  middle_name                 String                        @db.VarChar(50)
  last_name                   String                        @db.VarChar(50)
  suffix                      String                        @db.VarChar(50)
  user_id                     Int
  created_at                  DateTime?                     @default(now()) @db.Timestamp(0)
  updated_at                  DateTime?                     @db.Timestamp(0)
  removed_at                  DateTime?                     @db.Timestamp(0)
  is_exist                    Int?                          @default(1) @db.TinyInt
  actions                     actions[]
  campaign                    campaign[]
  campaign_action_reward_list campaign_action_reward_list[]
  campaign_transaction        campaign_transaction[]
  customer_info               customer_info[]
  users                       users                         @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "employee_info_ibfk_1")
  redeem                      redeem[]
  redeem_transaction          redeem_transaction[]
  reward                      reward[]

  @@index([user_id], map: "user_id")
}

model package_reward_list {
  id             Int       @id @default(autoincrement())
  reward_id      Int?
  created_at     DateTime? @default(now()) @db.Timestamp(0)
  updated_at     DateTime? @db.Timestamp(0)
  removed_at     DateTime? @db.Timestamp(0)
  is_exist       Int?      @default(1) @db.TinyInt
  Renamedpackage packages? @relation(fields: [reward_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "package_reward_list_ibfk_1")

  @@index([reward_id], map: "reward_id")
}

model redeem {
  id                 Int                  @id @default(autoincrement())
  point_cost         Float?               @db.Float
  status             String?              @db.VarChar(50)
  package_id         Int?
  reward_id          Int?
  employee_id        Int?
  created_at         DateTime?            @default(now()) @db.Timestamp(0)
  updated_at         DateTime?            @db.Timestamp(0)
  removed_at         DateTime?            @db.Timestamp(0)
  is_exist           Int?                 @default(1) @db.TinyInt
  employee_info      employee_info?       @relation(fields: [employee_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "redeem_ibfk_1")
  reward             reward?              @relation(fields: [reward_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "redeem_ibfk_2")
  Renamedpackage     packages?            @relation(fields: [package_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "redeem_ibfk_3")
  redeem_transaction redeem_transaction[]

  @@index([employee_id], map: "employee_id")
  @@index([package_id], map: "package_id")
  @@index([reward_id], map: "reward_id")
}

model redeem_transaction {
  id             Int            @id @default(autoincrement())
  status         String?        @db.VarChar(50)
  points         Float?         @db.Float
  customer_point Float?         @db.Float
  redeem_id      Int?
  employee_id    Int?
  customer_id    Int?
  created_at     DateTime?      @db.Timestamp(0)
  updated_at     DateTime?      @db.Timestamp(0)
  removed_at     DateTime?      @db.Timestamp(0)
  is_exist       Int?           @default(1) @db.TinyInt
  customer_info  customer_info? @relation(fields: [customer_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "redeem_transaction_ibfk_1")
  employee_info  employee_info? @relation(fields: [employee_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "redeem_transaction_ibfk_2")
  redeem         redeem?        @relation(fields: [redeem_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "redeem_transaction_ibfk_3")

  @@index([customer_id], map: "customer_id")
  @@index([employee_id], map: "employee_id")
  @@index([redeem_id], map: "redeem_id")
}

model reward {
  id                          Int                           @id @default(autoincrement())
  name                        String?                       @db.VarChar(50)
  description                 String?                       @db.VarChar(250)
  reward_type_id              Int?
  quantity                    Float?                        @db.Float
  employee_id                 Int?
  created_at                  DateTime?                     @default(now()) @db.Timestamp(0)
  updated_at                  DateTime?                     @db.Timestamp(0)
  removed_at                  DateTime?                     @db.Timestamp(0)
  is_exist                    Int?                          @default(1) @db.TinyInt
  campaign_action_reward_list campaign_action_reward_list[]
  campaign_reward_transaction campaign_reward_transaction[]
  redeem                      redeem[]
  employee_info               employee_info?                @relation(fields: [employee_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "reward_ibfk_1")
  reward_type                 reward_type?                  @relation(fields: [reward_type_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "reward_ibfk_2")

  @@index([employee_id], map: "employee_id")
  @@index([reward_type_id], map: "reward_type_id")
}

model reward_type {
  id         Int       @id @default(autoincrement())
  name       String?   @db.VarChar(250)
  created_at DateTime? @default(now()) @db.Timestamp(0)
  updated_at DateTime? @db.Timestamp(0)
  removed_at DateTime? @db.Timestamp(0)
  is_exist   Int?      @default(1) @db.TinyInt
  reward     reward[]
}

model user_type {
  id                               Int       @id @default(autoincrement())
  name                             String?   @db.VarChar(50)
  create_at                        DateTime? @default(now()) @db.Timestamp(0)
  update_at                        DateTime? @db.Timestamp(0)
  removed_at                       DateTime? @db.Timestamp(0)
  is_exist                         Int?      @default(1) @db.TinyInt
  users_users_user_typeTouser_type users[]   @relation("users_user_typeTouser_type")
}

model users {
  id                                   Int             @id @default(autoincrement())
  email                                String          @db.VarChar(50)
  password                             String
  phone_number                         String          @db.VarChar(50)
  code                                 String          @db.VarChar(15)
  expires_at                           DateTime        @default(now()) @db.Timestamp(0)
  user_type                            Int
  email_verified_at                    DateTime?       @db.Timestamp(0)
  created_at                           DateTime?       @default(now()) @db.Timestamp(0)
  deleted_at                           DateTime?       @db.Timestamp(0)
  removed_at                           DateTime?       @db.Timestamp(0)
  is_exist                             Int?            @default(1) @db.TinyInt
  customer_info                        customer_info[]
  employee_info                        employee_info[]
  user_type_users_user_typeTouser_type user_type       @relation("users_user_typeTouser_type", fields: [user_type], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "user_ibfk_1")

  @@index([user_type], map: "user_type")
}

model packages {
  id                  Int                   @id @default(autoincrement())
  name                String?               @db.VarChar(50)
  description         String?               @db.VarChar(250)
  multiplier          Float?                @db.Float
  created_at          DateTime?             @default(now()) @db.Timestamp(0)
  updated_at          DateTime?             @db.Timestamp(0)
  removed_at          DateTime?             @db.Timestamp(0)
  is_exist            Int?                  @db.TinyInt
  campaign            campaign[]
  customer_info       customer_info[]
  package_reward_list package_reward_list[]
  redeem              redeem[]
}
